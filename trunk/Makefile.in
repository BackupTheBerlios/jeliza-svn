# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = .
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = jelizagtk$(EXEEXT)
subdir = .
DIST_COMMON = README $(am__configure_deps) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(top_srcdir)/configure AUTHORS COPYING \
	ChangeLog INSTALL NEWS compile depcomp install-sh missing \
	mkinstalldirs
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno configure.status.lineno
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_jelizagtk_OBJECTS = jelizagtk-jeliza.$(OBJEXT) \
	jelizagtk-socketload.$(OBJEXT) jelizagtk-jelizagtk.$(OBJEXT) \
	jelizagtk-arrays.$(OBJEXT) jelizagtk-string_compare.$(OBJEXT) \
	jelizagtk-util.$(OBJEXT)
jelizagtk_OBJECTS = $(am_jelizagtk_OBJECTS)
jelizagtk_DEPENDENCIES =
DEFAULT_INCLUDES = -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(jelizagtk_SOURCES)
DIST_SOURCES = $(jelizagtk_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d $(distdir) \
    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(distdir); }; }
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = -g -Wall -fPIC -DPIC -Isrc/socket
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
AM_CPPFLAGS = -g -Wall -fPIC -DPIC -Isrc/socket
#jeliza_LDADD =  -lm -luuid -lpthread
#jeliza_LDFLAGS =             -pg
#jeliza_CFLAGS = -g -Wall -fPIC -DPIC -Isrc/socket
#jeliza_CPPFLAGS = -g -Wall -fPIC -DPIC -Isrc/socket              -pg
#jeliza_SOURCES = ./src/jeliza/jeliza.cpp ./src/jeliza/jeliza.h ./src/jeliza/arrays.cpp ./src/jeliza/main.cpp ./src/jeliza/server.cpp ./src/jeliza/string_compare.cpp ./src/jeliza/util.cpp ./src/socket/HttpdCookies.h ./src/socket/ListenSocket.h ./src/socket/ICrypt.h ./src/socket/MinderHandler.h ./src/socket/MemFile.h ./src/socket/SocketThread.h ./src/socket/Event.h ./src/socket/PoolSocket.h ./src/socket/HttpClientSocket.h ./src/socket/Ipv4Address.h ./src/socket/HTTPSocket.h ./src/socket/NullCrypt.h ./src/socket/StdLog.h ./src/socket/CircularBuffer.h ./src/socket/SocketAddress.h ./src/socket/Mutex.h ./src/socket/IEventOwner.h ./src/socket/HttpdForm.h ./src/socket/SocketHandler.h ./src/socket/MinderSocket.h ./src/socket/Lock.h ./src/socket/HttpPostSocket.h ./src/socket/EventTime.h ./src/socket/UdpSocket.h ./src/socket/MinionSocket.h ./src/socket/CTcpSocket.h ./src/socket/Utility.h ./src/socket/Thread.h ./src/socket/Parse.h ./src/socket/File.h ./src/socket/EventHandler.h ./src/socket/HttpPutSocket.h ./src/socket/Uid.h ./src/socket/SctpSocket.h ./src/socket/Base64.h ./src/socket/IFile.h ./src/socket/IEventHandler.h ./src/socket/Socket.h ./src/socket/Ipv6Address.h ./src/socket/socket_include.h ./src/socket/HttpdSocket.h ./src/socket/ISocketHandler.h ./src/socket/HttpDebugSocket.h ./src/socket/TcpSocket.h ./src/socket/ResolvServer.h ./src/socket/ResolvSocket.h ./src/socket/StdoutLog.h ./src/socket/HttpGetSocket.h ./src/jeliza/SocketHandler.h ./src/jeliza/TcpSocket.h ./src/jeliza/ListenSocket.h ./src/socket/CircularBuffer.cpp ./src/socket/ISocketHandler.cpp ./src/socket/HttpDebugSocket.cpp ./src/socket/TcpSocket.cpp ./src/socket/ResolvServer.cpp ./src/socket/Mutex.cpp ./src/socket/ResolvSocket.cpp ./src/socket/SocketHandler.cpp ./src/socket/Lock.cpp ./src/socket/HttpPostSocket.cpp ./src/socket/EventTime.cpp ./src/socket/MinionSocket.cpp ./src/socket/CTcpSocket.cpp ./src/socket/Parse.cpp ./src/socket/Event.cpp ./src/socket/SctpSocket.cpp ./src/socket/Base64.cpp ./src/socket/HttpClientSocket.cpp ./src/socket/Socket.cpp ./src/socket/Ipv6Address.cpp ./src/socket/HttpdSocket.cpp ./src/socket/IEventOwner.cpp ./src/socket/HttpdForm.cpp ./src/socket/StdoutLog.cpp ./src/socket/MinderSocket.cpp ./src/socket/HttpGetSocket.cpp ./src/socket/HttpdCookies.cpp ./src/socket/UdpSocket.cpp ./src/socket/Utility.cpp ./src/socket/Thread.cpp ./src/socket/MinderHandler.cpp ./src/socket/MemFile.cpp ./src/socket/File.cpp ./src/socket/EventHandler.cpp ./src/socket/SocketThread.cpp ./src/socket/HttpPutSocket.cpp ./src/socket/Uid.cpp ./src/socket/PoolSocket.cpp ./src/socket/Ipv4Address.cpp ./src/socket/HTTPSocket.cpp ./src/socket/socket_include.cpp ./src/socket/NullCrypt.cpp
jelizagtk_LDADD = -lm -lgtkmm-2.4  -lgdkmm-2.4  -latkmm-1.6  -lpangomm-1.4  -lcairomm-1.0  -lglibmm-2.4  -lsigc-2.0   -latk-1.0  -lgdk_pixbuf-2.0  -lpangocairo-1.0  -lcairo  -lpangoft2-1.0  -lfontconfig  -lfreetype  -lz  -lpango-1.0  -lm  -lgobject-2.0  -lgmodule-2.0  -lglib-2.0  -lglade-2.0 -lglademm-2.4
jelizagtk_LDFLAGS = -pg
jelizagtk_CFLAGS = -g -Wall -fPIC -DPIC
jelizagtk_CPPFLAGS = -pg             -g -Wall -fPIC -DPIC -I/usr/include/gtkmm-2.4 -I./src/jeliza/  -I/usr/lib/gtkmm-2.4/include  -I/usr/include/glibmm-2.4  -I/usr/lib/glibmm-2.4/include  -I/usr/include/gdkmm-2.4  -I/usr/lib/gdkmm-2.4/include  -I/usr/include/pangomm-1.4  -I/usr/include/atkmm-1.6  -I/usr/include/gtk-2.0  -I/usr/include/sigc++-2.0  -I/usr/lib/sigc++-2.0/include  -I/usr/include/glib-2.0  -I/usr/lib/glib-2.0/include  -I/usr/lib/gtk-2.0/include  -I/usr/include/cairomm-1.0  -I/usr/include/pango-1.0  -I/usr/include/cairo  -I/usr/include/freetype2  -I/usr/include/atk-1.0  -I/usr/include/libglademm-2.4
jelizagtk_SOURCES = ./src/jeliza/jeliza.h ./src/jeliza/jeliza.cpp ./src/jeliza/socketload.cpp ./src/gtkgui/jelizagtk.cpp ./src/jeliza/arrays.cpp ./src/jeliza/string_compare.cpp ./src/jeliza/util.cpp
LD_LIBRARY_PATH = .:./lib
WIN_LD_LIBRARY_PATH = .:./lib:/media/hdb5/data/Dev-Cpp/lib
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
am--refresh:
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu '; \
	      cd $(srcdir) && $(AUTOMAKE) --gnu  \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
jelizagtk$(EXEEXT): $(jelizagtk_OBJECTS) $(jelizagtk_DEPENDENCIES) 
	@rm -f jelizagtk$(EXEEXT)
	$(CXXLINK) $(jelizagtk_LDFLAGS) $(jelizagtk_OBJECTS) $(jelizagtk_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jelizagtk-arrays.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jelizagtk-jeliza.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jelizagtk-jelizagtk.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jelizagtk-socketload.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jelizagtk-string_compare.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jelizagtk-util.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

jelizagtk-jeliza.o: ./src/jeliza/jeliza.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(jelizagtk_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jelizagtk-jeliza.o -MD -MP -MF "$(DEPDIR)/jelizagtk-jeliza.Tpo" -c -o jelizagtk-jeliza.o `test -f './src/jeliza/jeliza.cpp' || echo '$(srcdir)/'`./src/jeliza/jeliza.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/jelizagtk-jeliza.Tpo" "$(DEPDIR)/jelizagtk-jeliza.Po"; else rm -f "$(DEPDIR)/jelizagtk-jeliza.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='./src/jeliza/jeliza.cpp' object='jelizagtk-jeliza.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(jelizagtk_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jelizagtk-jeliza.o `test -f './src/jeliza/jeliza.cpp' || echo '$(srcdir)/'`./src/jeliza/jeliza.cpp

jelizagtk-jeliza.obj: ./src/jeliza/jeliza.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(jelizagtk_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jelizagtk-jeliza.obj -MD -MP -MF "$(DEPDIR)/jelizagtk-jeliza.Tpo" -c -o jelizagtk-jeliza.obj `if test -f './src/jeliza/jeliza.cpp'; then $(CYGPATH_W) './src/jeliza/jeliza.cpp'; else $(CYGPATH_W) '$(srcdir)/./src/jeliza/jeliza.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/jelizagtk-jeliza.Tpo" "$(DEPDIR)/jelizagtk-jeliza.Po"; else rm -f "$(DEPDIR)/jelizagtk-jeliza.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='./src/jeliza/jeliza.cpp' object='jelizagtk-jeliza.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(jelizagtk_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jelizagtk-jeliza.obj `if test -f './src/jeliza/jeliza.cpp'; then $(CYGPATH_W) './src/jeliza/jeliza.cpp'; else $(CYGPATH_W) '$(srcdir)/./src/jeliza/jeliza.cpp'; fi`

jelizagtk-socketload.o: ./src/jeliza/socketload.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(jelizagtk_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jelizagtk-socketload.o -MD -MP -MF "$(DEPDIR)/jelizagtk-socketload.Tpo" -c -o jelizagtk-socketload.o `test -f './src/jeliza/socketload.cpp' || echo '$(srcdir)/'`./src/jeliza/socketload.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/jelizagtk-socketload.Tpo" "$(DEPDIR)/jelizagtk-socketload.Po"; else rm -f "$(DEPDIR)/jelizagtk-socketload.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='./src/jeliza/socketload.cpp' object='jelizagtk-socketload.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(jelizagtk_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jelizagtk-socketload.o `test -f './src/jeliza/socketload.cpp' || echo '$(srcdir)/'`./src/jeliza/socketload.cpp

jelizagtk-socketload.obj: ./src/jeliza/socketload.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(jelizagtk_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jelizagtk-socketload.obj -MD -MP -MF "$(DEPDIR)/jelizagtk-socketload.Tpo" -c -o jelizagtk-socketload.obj `if test -f './src/jeliza/socketload.cpp'; then $(CYGPATH_W) './src/jeliza/socketload.cpp'; else $(CYGPATH_W) '$(srcdir)/./src/jeliza/socketload.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/jelizagtk-socketload.Tpo" "$(DEPDIR)/jelizagtk-socketload.Po"; else rm -f "$(DEPDIR)/jelizagtk-socketload.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='./src/jeliza/socketload.cpp' object='jelizagtk-socketload.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(jelizagtk_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jelizagtk-socketload.obj `if test -f './src/jeliza/socketload.cpp'; then $(CYGPATH_W) './src/jeliza/socketload.cpp'; else $(CYGPATH_W) '$(srcdir)/./src/jeliza/socketload.cpp'; fi`

jelizagtk-jelizagtk.o: ./src/gtkgui/jelizagtk.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(jelizagtk_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jelizagtk-jelizagtk.o -MD -MP -MF "$(DEPDIR)/jelizagtk-jelizagtk.Tpo" -c -o jelizagtk-jelizagtk.o `test -f './src/gtkgui/jelizagtk.cpp' || echo '$(srcdir)/'`./src/gtkgui/jelizagtk.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/jelizagtk-jelizagtk.Tpo" "$(DEPDIR)/jelizagtk-jelizagtk.Po"; else rm -f "$(DEPDIR)/jelizagtk-jelizagtk.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='./src/gtkgui/jelizagtk.cpp' object='jelizagtk-jelizagtk.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(jelizagtk_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jelizagtk-jelizagtk.o `test -f './src/gtkgui/jelizagtk.cpp' || echo '$(srcdir)/'`./src/gtkgui/jelizagtk.cpp

jelizagtk-jelizagtk.obj: ./src/gtkgui/jelizagtk.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(jelizagtk_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jelizagtk-jelizagtk.obj -MD -MP -MF "$(DEPDIR)/jelizagtk-jelizagtk.Tpo" -c -o jelizagtk-jelizagtk.obj `if test -f './src/gtkgui/jelizagtk.cpp'; then $(CYGPATH_W) './src/gtkgui/jelizagtk.cpp'; else $(CYGPATH_W) '$(srcdir)/./src/gtkgui/jelizagtk.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/jelizagtk-jelizagtk.Tpo" "$(DEPDIR)/jelizagtk-jelizagtk.Po"; else rm -f "$(DEPDIR)/jelizagtk-jelizagtk.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='./src/gtkgui/jelizagtk.cpp' object='jelizagtk-jelizagtk.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(jelizagtk_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jelizagtk-jelizagtk.obj `if test -f './src/gtkgui/jelizagtk.cpp'; then $(CYGPATH_W) './src/gtkgui/jelizagtk.cpp'; else $(CYGPATH_W) '$(srcdir)/./src/gtkgui/jelizagtk.cpp'; fi`

jelizagtk-arrays.o: ./src/jeliza/arrays.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(jelizagtk_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jelizagtk-arrays.o -MD -MP -MF "$(DEPDIR)/jelizagtk-arrays.Tpo" -c -o jelizagtk-arrays.o `test -f './src/jeliza/arrays.cpp' || echo '$(srcdir)/'`./src/jeliza/arrays.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/jelizagtk-arrays.Tpo" "$(DEPDIR)/jelizagtk-arrays.Po"; else rm -f "$(DEPDIR)/jelizagtk-arrays.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='./src/jeliza/arrays.cpp' object='jelizagtk-arrays.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(jelizagtk_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jelizagtk-arrays.o `test -f './src/jeliza/arrays.cpp' || echo '$(srcdir)/'`./src/jeliza/arrays.cpp

jelizagtk-arrays.obj: ./src/jeliza/arrays.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(jelizagtk_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jelizagtk-arrays.obj -MD -MP -MF "$(DEPDIR)/jelizagtk-arrays.Tpo" -c -o jelizagtk-arrays.obj `if test -f './src/jeliza/arrays.cpp'; then $(CYGPATH_W) './src/jeliza/arrays.cpp'; else $(CYGPATH_W) '$(srcdir)/./src/jeliza/arrays.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/jelizagtk-arrays.Tpo" "$(DEPDIR)/jelizagtk-arrays.Po"; else rm -f "$(DEPDIR)/jelizagtk-arrays.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='./src/jeliza/arrays.cpp' object='jelizagtk-arrays.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(jelizagtk_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jelizagtk-arrays.obj `if test -f './src/jeliza/arrays.cpp'; then $(CYGPATH_W) './src/jeliza/arrays.cpp'; else $(CYGPATH_W) '$(srcdir)/./src/jeliza/arrays.cpp'; fi`

jelizagtk-string_compare.o: ./src/jeliza/string_compare.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(jelizagtk_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jelizagtk-string_compare.o -MD -MP -MF "$(DEPDIR)/jelizagtk-string_compare.Tpo" -c -o jelizagtk-string_compare.o `test -f './src/jeliza/string_compare.cpp' || echo '$(srcdir)/'`./src/jeliza/string_compare.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/jelizagtk-string_compare.Tpo" "$(DEPDIR)/jelizagtk-string_compare.Po"; else rm -f "$(DEPDIR)/jelizagtk-string_compare.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='./src/jeliza/string_compare.cpp' object='jelizagtk-string_compare.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(jelizagtk_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jelizagtk-string_compare.o `test -f './src/jeliza/string_compare.cpp' || echo '$(srcdir)/'`./src/jeliza/string_compare.cpp

jelizagtk-string_compare.obj: ./src/jeliza/string_compare.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(jelizagtk_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jelizagtk-string_compare.obj -MD -MP -MF "$(DEPDIR)/jelizagtk-string_compare.Tpo" -c -o jelizagtk-string_compare.obj `if test -f './src/jeliza/string_compare.cpp'; then $(CYGPATH_W) './src/jeliza/string_compare.cpp'; else $(CYGPATH_W) '$(srcdir)/./src/jeliza/string_compare.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/jelizagtk-string_compare.Tpo" "$(DEPDIR)/jelizagtk-string_compare.Po"; else rm -f "$(DEPDIR)/jelizagtk-string_compare.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='./src/jeliza/string_compare.cpp' object='jelizagtk-string_compare.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(jelizagtk_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jelizagtk-string_compare.obj `if test -f './src/jeliza/string_compare.cpp'; then $(CYGPATH_W) './src/jeliza/string_compare.cpp'; else $(CYGPATH_W) '$(srcdir)/./src/jeliza/string_compare.cpp'; fi`

jelizagtk-util.o: ./src/jeliza/util.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(jelizagtk_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jelizagtk-util.o -MD -MP -MF "$(DEPDIR)/jelizagtk-util.Tpo" -c -o jelizagtk-util.o `test -f './src/jeliza/util.cpp' || echo '$(srcdir)/'`./src/jeliza/util.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/jelizagtk-util.Tpo" "$(DEPDIR)/jelizagtk-util.Po"; else rm -f "$(DEPDIR)/jelizagtk-util.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='./src/jeliza/util.cpp' object='jelizagtk-util.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(jelizagtk_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jelizagtk-util.o `test -f './src/jeliza/util.cpp' || echo '$(srcdir)/'`./src/jeliza/util.cpp

jelizagtk-util.obj: ./src/jeliza/util.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(jelizagtk_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jelizagtk-util.obj -MD -MP -MF "$(DEPDIR)/jelizagtk-util.Tpo" -c -o jelizagtk-util.obj `if test -f './src/jeliza/util.cpp'; then $(CYGPATH_W) './src/jeliza/util.cpp'; else $(CYGPATH_W) '$(srcdir)/./src/jeliza/util.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/jelizagtk-util.Tpo" "$(DEPDIR)/jelizagtk-util.Po"; else rm -f "$(DEPDIR)/jelizagtk-util.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='./src/jeliza/util.cpp' object='jelizagtk-util.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(jelizagtk_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jelizagtk-util.obj `if test -f './src/jeliza/util.cpp'; then $(CYGPATH_W) './src/jeliza/util.cpp'; else $(CYGPATH_W) '$(srcdir)/./src/jeliza/util.cpp'; fi`
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(am__remove_distdir)
	mkdir $(distdir)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(SHELL) $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r $(distdir)
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bunzip2 -c $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && cd $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e '1{h;s/./=/g;p;x;}' -e '$${p;x;}'
distuninstallcheck:
	@cd $(distuninstallcheck_dir) \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am am--refresh check check-am clean \
	clean-binPROGRAMS clean-generic ctags dist dist-all dist-bzip2 \
	dist-gzip dist-shar dist-tarZ dist-zip distcheck distclean \
	distclean-compile distclean-generic distclean-tags \
	distcleancheck distdir distuninstallcheck dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-info-am


win:	clean winsocket winjeliza

linuxupdate:	clean linuxjeliza
winupdate:	clean winjeliza

linuxjeliza: linuxjeliza.o
	mv main.o main.o.bak ; true
	mv server.o server.o.bak ; true
	g++ -shared -o libjeliza.so -Wl,-soname,libjeliza.so *.o
	strip libjeliza.so
	mv libjeliza.so ./lib
	mv server.o.bak server.o ; true
	mv main.o.bak main.o ; true

	g++ $(CFLAGS) -L$(LD_LIBRARY_PATH) -o jeliza main.o compile_tmp/*.o -lm --library jeliza -luuid -lpthread $(DEBUG)

	strip jeliza
	mv jeliza bin
	rm -f *.o *~
	rm -rf dist/linux
	mkdir -p dist/linux
	cp -r bin dist/linux
	rm dist/windows/bin/jeliza.exe ; true
	cp -r lib dist/linux
	cp jeliza.inc.html dist/linux
	cp JEliza.txt dist/linux
	@echo "jeliza is up to date"

linuxjeliza.o:
	c++ -I. -L. $(CFLAGS) -c src/jeliza/arrays.cpp
	c++ -I. -L. $(CFLAGS) -c src/jeliza/jeliza.cpp
	c++ -I. -L. $(CFLAGS) -c src/jeliza/main.cpp
	c++ -I. -L. $(CFLAGS) -c src/jeliza/server.cpp
	c++ -I. -L. $(CFLAGS) -c src/jeliza/string_compare.cpp
	c++ -I. -L. $(CFLAGS) -c src/jeliza/util.cpp

socket:
	cd src/socket ; c++ -I. -L. $(CFLAGS) -c *.cpp ; mv *.o ../.. ; cd ../..
	rm -rf compile_tmp
	mkdir compile_tmp
	mv *.o compile_tmp
	rm -f *.o

winjeliza: winjeliza.o
#	mv main.o main.o.bak ; true
#	mv server.o server.o.bak ; true
#	i586-mingw32msvc-g++ -shared -o libjeliza.so -Wl,-soname,libjeliza.so *.o
#strip libjeliza.so
#	mv libjeliza.so ./lib
#	mv server.o.bak server.o
#	mv main.o.bak main.o

	i586-mingw32msvc-g++ $(CFLAGS) -L$(WIN_LD_LIBRARY_PATH) -o jeliza.exe main.o compile_tmp_win/*.o -lm -luuid --library pthread -lwsock32 -lrpcrt4 -lole32 $(DEBUG)

	i586-mingw32msvc-strip jeliza.exe
	mv jeliza.exe bin
	rm -f *.o *~
	rm -rf dist/windows
	mkdir -p dist/windows
	cp -r bin dist/windows
	rm dist/windows/bin/jeliza ; true
	cp jeliza.inc.html dist/windows
	cp JEliza.txt dist/windows
	@echo "jeliza is up to date"

winjeliza.o:
	i586-mingw32msvc-c++ -I. -L. $(CFLAGS) -c src/jeliza/arrays.cpp
	i586-mingw32msvc-c++ -I. -L. $(CFLAGS) -c src/jeliza/jeliza.cpp
	i586-mingw32msvc-c++ -I. -L. $(CFLAGS) -c src/jeliza/main.cpp
	i586-mingw32msvc-c++ -I. -L. $(CFLAGS) -c src/jeliza/server.cpp
	i586-mingw32msvc-c++ -I. -L. $(CFLAGS) -c src/jeliza/string_compare.cpp
	i586-mingw32msvc-c++ -I. -L. $(CFLAGS) -c src/jeliza/util.cpp

winsocket:
	rm -f *.o
	cd src/socket ; i586-mingw32msvc-c++ -I. -L. $(CFLAGS) -c *.cpp ; mv *.o ../.. ; cd ../..
	rm -rf compile_tmp_win
	mkdir compile_tmp_win
	mv *.o compile_tmp_win
	rm -f *.o

clean:
	rm -f *.o *.so *~ *.a

packlinux:
	strip jeliza ; true
	mv jeliza bin ; true
	rm -f *.o *~
	rm -rf dist/linux
	mkdir -p dist/linux
	cp -r bin dist/linux
	rm dist/linux/bin/jeliza.exe ; true
	cp -r lib dist/linux
	cp jeliza.inc.html dist/linux
	cp JEliza.txt dist/linux

distribution: packlinux clean
	mkdir tmp_dist ; true
	rm -rf tmp_dist
	mkdir tmp_dist

	cp -r bin/gtk-jeliza tmp_dist/windows
#	mkdir tmp_dist/windows
#	mv tmp_dist/windows/bin/jeliza.exe tmp_dist/windows/ ; true
#	i586-mingw32msvc-strip tmp_dist/windows/jeliza.exe
#	cp ../gui-addon/JElizaWX.exe tmp_dist/windows
#	cp ../gui-addon/transla* tmp_dist/windows
#	cp ../gui-addon/version.ver tmp_dist/windows
	cp JEliza.txt tmp_dist/windows
	cp gpl.txt tmp_dist/windows
	cp Benutzerhandbuch.*  tmp_dist/windows
#	cp jeliza.inc.html tmp_dist/windows

	mkdir tmp_dist/linux
	cp dist/linux/bin/jeliza tmp_dist/linux
	strip tmp_dist/linux/jeliza
	cp jelizagtk tmp_dist/linux/
	cp JEliza.txt tmp_dist/linux
	cp *.txt tmp_dist/linux
	cp gpl.txt tmp_dist/linux
	cp jeliza.inc.html tmp_dist/linux

	mkdir tmp_dist/src
	cp -r * tmp_dist/src ; true
	rm -rf tmp_dist/src/compile_tmp* ; true
	rm -rf tmp_dist/src/tmp_dist ; true
	rm -rf tmp_dist/src/dist/* ; true
	rm -rf tmp_dist/src/gtk/* ; true
	rm -rf tmp_dist/src/distribution ; true
	rm -rf tmp_dist/src/lib/* ; true
	rm -rf tmp_dist/src/bin/* ; true

	find tmp_dist/ -name "*svn*" -exec rm -rf '{}' \; ; true
	find tmp_dist/ -name "*svn*" -exec rm -rf '{}' \; ; true
	find tmp_dist/ -name "*svn*" -exec rm -rf '{}' \; ; true

	find tmp_dist/ -name "*~*" -exec rm -rf '{}' \; ; true
	find tmp_dist/ -name "*~*" -exec rm -rf '{}' \; ; true

	rm -rf ../distribution/*.zip ; true
	rm -rf ../distribution/*.gz ; true
	mkdir ../distribution ; true

	cd tmp_dist ; cd windows ; zip -r ../../../distribution/win.zip *
	cd tmp_dist ; cd linux ; tar cplzSf ../../../distribution/linux.tar.gz *
	cd tmp_dist ; cd src ; zip -r ../../../distribution/src.zip *

java:
	find javagui -name "*.java" -exec javac '{}' \;
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
